#!/bin/sh

# Description:
# Calculates the Sum of Squared Errors (SSE) and SSE reduction for each possible
# partition count on the given network.

if [ "$#" -ne 2 ] || ! [ -f $1 ] || ! [ -f $2 ]; then
    echo "Usage: $0 <data_file> <graph_file>"
    exit 1
fi

# Number of threads to use.
NUM_THREADS=48

# Data file
DATA=$1

# Graph file
GRAPH=$2

# Name of the network
NETWORK=$(basename $DATA .data)

# Path to graph compression program
COMPRESS=$(readlink -m "$(dirname $0)/../../algorithms/slice-tree/graph_compression")

if ! [ -f $COMPRESS ]; then
    echo "Error: Graph compression executable '$COMPRESS' does not exist."
    echo "       Be sure the program has been compiled."
    exit 1
fi

SIZES=/tmp/$NETWORK.sizes

# Pre-compute partition sizes if necessary
if ! [ -f $SIZES ]; then
    $COMPRESS --graph $GRAPH --values $DATA \
        --partsizes $SIZES --numthreads $NUM_THREADS

    if ! [ $? -eq 0 ]; then
        echo "Error: Failed to pre-compute partition sizes."
    fi
fi

# Find the number of nodes in the network
NODE_COUNT=$(wc -l < $DATA)

for ((i=2; i <= $NODE_COUNT; ++i)); do
    OUTPUT=$($COMPRESS --compression ST \
        --values $DATA --graph $GRAPH --partsizes $SIZES \
        --maxradius 2 --numpart $i --numthreads $NUM_THREADS \
        | awk '/^sse = / {print $3;} /^sse_reduction = / {print $3;}')

    SSE=$(echo $OUTPUT | awk '{print $1;}')
    #SSE_REDUCTION=$(echo $OUTPUT | awk '{print $2;}')

    #echo "$i,$SSE,$SSE_REDUCTION"
    echo "$(echo "$i 16 * p" | dc),$SSE"
done

# Delete pre-computed partition sizes
rm $SIZES
